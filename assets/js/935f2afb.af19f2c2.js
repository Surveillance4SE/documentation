"use strict";(self.webpackChunkes_documentation=self.webpackChunkes_documentation||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"SECCOM","href":"/documentation/docs/intro","docId":"intro"},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Management API","href":"/documentation/docs/architecture/management","docId":"architecture/management"},{"type":"link","label":"IMA","href":"/documentation/docs/architecture/ima","docId":"architecture/ima"},{"type":"link","label":"Human Detection Module","href":"/documentation/docs/architecture/hdm","docId":"architecture/hdm"},{"type":"link","label":"Health Checks","href":"/documentation/docs/architecture/health_check","docId":"architecture/health_check"},{"type":"link","label":"Notification Module","href":"/documentation/docs/architecture/notification_module","docId":"architecture/notification_module"},{"type":"link","label":"Management Frontend","href":"/documentation/docs/architecture/management_frontend","docId":"architecture/management_frontend"}]},{"type":"category","label":"Deployment","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Production Solution","href":"/documentation/docs/deployment/aws_solution","docId":"deployment/aws_solution"},{"type":"link","label":"Networking","href":"/documentation/docs/deployment/networking","docId":"deployment/networking"},{"type":"link","label":"Service Discovery","href":"/documentation/docs/deployment/service_discovery","docId":"deployment/service_discovery"},{"type":"link","label":"Scalability","href":"/documentation/docs/deployment/scalability","docId":"deployment/scalability"}]},{"type":"category","label":"SCRUM","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Personas","href":"/documentation/docs/scrum/personas","docId":"scrum/personas"},{"type":"link","label":"User Stories","href":"/documentation/docs/scrum/user_stories","docId":"scrum/user_stories"}]}]},"docs":{"architecture/hdm":{"id":"architecture/hdm","title":"Human Detection Module","description":"The Human Detection Module consumes frames from the cameras (sent through RabbitMQ) and detects humans.","sidebar":"tutorialSidebar"},"architecture/health_check":{"id":"architecture/health_check","title":"Health Checks","description":"The health checks are implemented by hand, given the impossibility of using Route53 to monitor local components.","sidebar":"tutorialSidebar"},"architecture/ima":{"id":"architecture/ima","title":"IMA","description":"Intrustion Management API.","sidebar":"tutorialSidebar"},"architecture/management":{"id":"architecture/management","title":"Management API","description":"This service handles properties, cameras and user preferences.","sidebar":"tutorialSidebar"},"architecture/management_frontend":{"id":"architecture/management_frontend","title":"Management Frontend","description":"Description","sidebar":"tutorialSidebar"},"architecture/notification_module":{"id":"architecture/notification_module","title":"Notification Module","description":"This module is responsible for handling all notification requests. It\'s subscribed to notifications requests queue and whenever a message arrives at this given topic, the module will consume the message and proceed to send notifications to a certain list of users/officers through their preferencial method of receiving the notifications.","sidebar":"tutorialSidebar"},"deployment/aws_solution":{"id":"deployment/aws_solution","title":"Production Solution","description":"Diagram","sidebar":"tutorialSidebar"},"deployment/networking":{"id":"deployment/networking","title":"Networking","description":"The solution one VPC, which is subnetted in a public subnet and several other private ones. The components deployed privately, are grouped according to their role for the solution:","sidebar":"tutorialSidebar"},"deployment/scalability":{"id":"deployment/scalability","title":"Scalability","description":"The ECS cluster\'s Auto Scaling group can be easily be configured to launch more compute power according to necessity. As for the Human Detection Module, the component which needs the best performance, it was configured to be running on a maximum of 3 tasks and minimum of 1, meaning that according to system load, new workers can be quickly deployed and start processing frames.","sidebar":"tutorialSidebar"},"deployment/service_discovery":{"id":"deployment/service_discovery","title":"Service Discovery","description":"Using CloudMap and Route53, a service discovery solution was implemented in the system. When deployed, containers register their IP in a DNS record database, giving them a constant text value. This allows our other services to quickly resolve where each service is regardless of their current address.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"SECCOM","description":"SECCOM is a surveillence and monitoring system used to provide alarms and alerts triggered by detected intrusions on private property. Our system uses a machine learning algorithm to find humans in video frames which triggers a whole system to both notify and take action against tresspassers.","sidebar":"tutorialSidebar"},"scrum/personas":{"id":"scrum/personas","title":"Personas","description":"Administrator","sidebar":"tutorialSidebar"},"scrum/user_stories":{"id":"scrum/user_stories","title":"User Stories","description":"Defenition of Ready","sidebar":"tutorialSidebar"}}}')}}]);